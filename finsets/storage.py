# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_storage.ipynb.

# %% auto 0
__all__ = ['BaseStorage', 'LocalStorage']

# %% ../nbs/01_storage.ipynb 3
from abc import ABC, abstractmethod
from pathlib import Path
import time, os, pickle

import pandas as pd
import numpy as np

# %% ../nbs/01_storage.ipynb 4
class BaseStorage(ABC):
    "Abstract base class for different types of storage classes."

    @abstractmethod
    def save(self, data, dataset_name):
        pass 

    @abstractmethod
    def load(self, dataset_name):
        pass 
    
    @abstractmethod
    def delete(self, dataset_name):
        pass 

    @abstractmethod
    def exists(self, dataset_name):
        pass  
    
    @abstractmethod
    def is_stale(self, dataset_name):
        pass    

# %% ../nbs/01_storage.ipynb 5
class LocalStorage(BaseStorage):
    "Methods which facilitate storing and loading data using a local file system"

    def __init__(self, data_dir_path: Path):
        if data_dir_path.exists() and data_dir_path.is_dir(): 
            self.data_dir_path = data_dir_path
        else:
            raise ValueError(f"{data_dir_path} is not a path to an existing local directory")

    def save(self, data, dataset_name: str):
        with open(self.filepath(dataset_name), 'wb') as f:
            pickle.dump(data, f)

    def load(self, dataset_name: str):
        with open(self.filepath(dataset_name), 'rb') as f:
            data = pickle.load(f)
        return data
    
    def delete(self, dataset_name: str):
        os.remove(self.filepath(dataset_name))

    def exists(self, dataset_name: str):
        filepath = self.filepath(dataset_name)
        return filepath.exists() and filepath.is_file()
    
    def is_stale(self, dataset_name: str):
        one_year_seconds = 365 * 24 * 60 * 60  
        current_time = time.time()
        file_mtime = Path(self.filepath(dataset_name)).stat().st_mtime
        return (current_time - file_mtime) > one_year_seconds

    def filepath(self, dataset_name: str):
        return self.data_dir_path/f'{dataset_name}'
