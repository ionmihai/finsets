# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_storage.ipynb.

# %% auto 0
__all__ = ['BaseStorage', 'LocalStorage']

# %% ../nbs/01_storage.ipynb 3
from abc import ABC, abstractmethod
from pathlib import Path
import os 
import time

import pandas as pd

# %% ../nbs/01_storage.ipynb 4
class BaseStorage(ABC):

    @abstractmethod
    def save(self, data, dataset_name):
        pass 

    @abstractmethod
    def load(self, dataset_name):
        pass 
    
    @abstractmethod
    def exists(self, dataset_name):
        pass  
    
    @abstractmethod
    def is_stale(self, dataset_name):
        pass    

# %% ../nbs/01_storage.ipynb 5
class LocalStorage(BaseStorage):

    def __init__(self, data_dir_path: Path):
        self.data_dir_path = data_dir_path

    def save(self, data, dataset_name: str):
        data.to_pickle(self.filepath(dataset_name)) 

    def load(self, dataset_name: str):
        return pd.read_pickle(self.filepath(dataset_name))         
    
    def exists(self, dataset_name: str):
        return os.isfile(self.filepath(dataset_name))
    
    def is_stale(self, dataset_name: str):
        one_year_seconds = 365 * 24 * 60 * 60  
        current_time = time.time()
        file_mtime = Path(self.filepath(dataset_name)).stat().st_mtime
        return (current_time - file_mtime) > one_year_seconds

    def filepath(self, dataset_name: str):
        return self.data_dir_path/f'{dataset_name}.pkl.zip'
