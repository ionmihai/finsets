# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/wrds_compa.ipynb.

# %% ../nbs/wrds_compa.ipynb 2
from __future__ import annotations
from typing import List, Dict, Tuple, Callable
import os

import pandas as pd
import numpy as np
import wrds 

import pandasmore as pdm
from . import wrds_utils, wrds_links

# %% auto 0
__all__ = ['common_raw_vars', 'download', 'clean']

# %% ../nbs/wrds_compa.ipynb 3
def common_raw_vars():
    return ['datadate', 'gvkey', 'cusip' ,'cik' ,'tic' ,'fyear' ,'fyr' ,'naicsh', 'sich' ,'exchg',  
            'lt' ,'at' ,'txditc' ,'pstkl' ,'pstkrv' ,'pstk' ,'csho' ,'ajex' , 'rdip',
            'act' ,'dvc' ,'xad','seq' ,'che' ,'lct' ,'dlc' ,'ib' ,'dvp' ,'txdi' ,'dp' ,
            'txp' ,'oancf' ,'ivncf' ,'fincf' ,'dltt' ,'mib','ceq' ,'invt' ,'cogs' , 'revt',
            'sale' ,'capx' ,'xrd' ,'txdb' ,'prcc_f' ,'sstk' ,'prstkc' ,'dltis' ,'dltr' ,'emp' ,
            'dd1' ,'ppegt' ,'ppent' ,'xint' ,'txt' ,'sppe' ,'gdwl' ,'xrent' ,'re' ,'dvpsx_f' ,
            'tstk' ,'wcap' ,'rect' ,'xsga' ,'aqc' ,'oibdp' ,'dpact' ,'fic' ,'ni' ,'ivao' ,'ivst' ,
            'dv' , 'intan' ,'pi' ,'txfo' ,'pifo' ,'xpp' ,'drc' ,'drlt' ,'ap' ,'xacc' ,'itcb']             

# %% ../nbs/wrds_compa.ipynb 5
def download(vars: List[str]=common_raw_vars(),
             library: str='comp.funda', # WRDS Compustat library (must start with 'comp.')
             wrds_username: str=None, #If None, looks for WRDS_USERNAME with `os.getenv`, then prompts you if needed
             ) -> pd.DataFrame:
    """Downloads `vars` from WRDS `library`"""

    always_get_these = ['datadate', 'gvkey']
    vars = always_get_these + [x for x in vars if x not in always_get_these]
    sql_string=f"""select {','.join(vars)} from {library}
                        where indfmt='INDL' and datafmt='STD' and popsrc='D' and consol='C'"""
    
    return wrds_utils.download(sql_string, wrds_username)

# %% ../nbs/wrds_compa.ipynb 8
def clean(df: pd.DataFrame, # If None, downloads the entire comp.funda dataset
          ) -> pd.DataFrame:
    
    if df is None: df = download()
    df = wrds_links.merge_permno_into_gvkey(dset_using_gvkey=df)
    df = pdm.setup_panel(df, panel_ids='permno', time_var='datadate', freq='Y')
    return df 
