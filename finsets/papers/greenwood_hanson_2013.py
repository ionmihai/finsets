# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/02_papers/greenwood_hanson_2013.ipynb.

# %% ../../nbs/02_papers/greenwood_hanson_2013.ipynb 2
from __future__ import annotations
from typing import List
from pathlib import Path
import os

from scipy.stats import norm
import pandas as pd
import numpy as np

import pandasmore as pdm
from ..wrds import wrds_api

# %% auto 0
__all__ = ['DATA_REPO', 'COMPA_PATH', 'COMPFT_PATH', 'CRSPM_PATH', 'CRSPFT_PATH', 'OUTPUT_PATH', 'FREQ', 'START_DATE', 'END_DATE',
           'ENTITY_ID_IN_CLEAN_DSET', 'TIME_VAR_IN_CLEAN_DSET', 'input_data', 'calculate_default_prob', 'calculate_cms']

# %% ../../nbs/02_papers/greenwood_hanson_2013.ipynb 3
#| eval: false
DATA_REPO = Path(os.getenv('DATA_REPO')) #path to folder with all needed datasets (the four below)

COMPA_PATH = DATA_REPO/'finsets/wrds/compa_ccm/processed.pkl.zip' #created with finsets.wrds.compa_ccm.process_raw_data()
COMPFT_PATH = DATA_REPO/'finsets/wrds/compa_ccm/features.pkl.zip' #created with finsets.wrds.compa_ccm.features()
CRSPM_PATH = DATA_REPO/'finsets/wrds/crspm/processed.pkl.zip'  #created with finsets.wrds.crspm.process_raw_data()
CRSPFT_PATH = DATA_REPO/'finsets/wrds/crspm/features.pkl.zip'  #created with finsets.wrds.crspm.process_raw_data()

OUTPUT_PATH = DATA_REPO/'finsets/papers/greenwood_hanson_2016/features.pkl.zip'

FREQ = 'A'
START_DATE = 1962
END_DATE = None
ENTITY_ID_IN_CLEAN_DSET = 'permno'
TIME_VAR_IN_CLEAN_DSET = f'{FREQ}date'

# %% ../../nbs/02_papers/greenwood_hanson_2013.ipynb 4
def input_data():
    compa = pd.read_pickle(COMPA_PATH)[['dtdate','dltt','dlc']].copy()
    compft = pd.read_pickle(COMPFT_PATH)[['sic_full','debtiss_tot_2la']].copy()
    crspm = pd.read_pickle(CRSPM_PATH)[['ret','prc','shrout','exchcd','shrcd', 'siccd']].copy()
    crspft = pd.read_pickle(CRSPFT_PATH)[['retvol12', 'lbhret12']].copy()

    comp = pd.concat([compa,compft], axis=1).reset_index()
    comp['Mdate'] = comp.dtdate.dt.to_period('M')
    crsp = pd.concat([crspm,crspft], axis=1).reset_index()
    df = comp.merge(crsp, how='left', on=['permno','Mdate'])

    return df.set_index(['permno','Adate'])

# %% ../../nbs/02_papers/greenwood_hanson_2013.ipynb 5
def calculate_default_prob(df: pd.DataFrame=None):

    if df is None: df = input_data()
    
    df = df.query('exchcd in [1,2,3] and shrcd in [10,11]').copy()

    df[['dltt','dlc']] = pdm.wins(df[['dltt','dlc']])
    df['F'] = df['dlc'] + df['dltt']/2
    df['E'] = abs(df['prc']) * df['shrout'] / 1000
    df['V'] = df['E'] + df['F']
    df.loc[(df.V<=0) | (df.F<=0) | (df.E==0) | (df.dlc<0) |(df.dltt<0), ['V','F']] = np.nan

    df['sigmaE'] = df['retvol12'] * (12**0.5)
    df['sigmaV'] = df.sigmaE * df.E / df.V + (0.05 + 0.25*df.sigmaE) * df.F / df.V 

    df['DD'] = (np.log(df.V / df.F) + df.lbhret12 - 0.5*(df.sigmaV**2)) / df.sigmaV
    df['DD'] = pdm.wins(df['DD'])
    df = df.dropna(subset=['DD'])
    df['EDF'] = norm.cdf(-df.DD.astype('float64')) #expected default probability

    return df

# %% ../../nbs/02_papers/greenwood_hanson_2013.ipynb 7
def calculate_cms(df:pd.DataFrame=None):

    if df is None: df = calculate_default_prob()

    df['in_nyse'] = df['exchcd']==1
    df['issuance_quintile'] = pdm.bins_using_masked_cutoffs(df, sortvar='debtiss_tot_2la', maskvar='in_nyse', 
                                                            quantiles=[.2,.4,.6,.8])
    df['edf_decile'] = pdm.bins_using_masked_cutoffs(df, sortvar='EDF', maskvar='in_nyse', 
                                                            quantiles=[x/10 for x in range(1,10)])
    means = df.reset_index().groupby(['Adate', 'issuance_quintile'])['edf_decile'].mean().reset_index().set_index('Adate')
    means = means.pivot(columns='issuance_quintile', values='edf_decile')
    cms = (means[5] - means[1]).to_frame(name='CMS')

    os.makedirs(OUTPUT_PATH.parent, exist_ok=True)
    cms.to_pickle(OUTPUT_PATH)
    return cms
