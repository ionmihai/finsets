# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/hassan_2019_qje.ipynb.

# %% auto 0
__all__ = ['variables', 'download_raw', 'clean', 'bring_permno']

# %% ../nbs/hassan_2019_qje.ipynb 4
import pandas as pd

import pandasmore as pdm
from . import wrds_links

# %% ../nbs/hassan_2019_qje.ipynb 10
def variables():
    """Names of key variables in the dataset. 
    `company_name`,`hqcountrycode`,`isin`,`cusip`,`ticker` are also available but are omitted here to speed things up and save memory."""
    
    return ['gvkey','date','date_earningscall',
            'PRisk','NPRisk','Risk',
            'PSentiment','NPSentiment','Sentiment',
            'PRiskT_economic','PRiskT_environment','PRiskT_trade','PRiskT_institutions','PRiskT_health','PRiskT_security','PRiskT_tax','PRiskT_technology']

# %% ../nbs/hassan_2019_qje.ipynb 12
def download_raw(url: str=vintage_urls()[-1], # URL to the Stata (.dta) version of the dataset
                 vars: list=variables() # Which 
                 ) -> pd.DataFrame:
    return pd.read_stata(url, columns=vars)

# %% ../nbs/hassan_2019_qje.ipynb 16
def clean(df: pd.DataFrame=None, # If None, will download using `download_raw`
          ) -> pd.DataFrame:
    """Converts `gvkey` to string and applies `pandasmore.setup_panel`"""

    if df is None: df = download_raw()
    else: df = df.copy()
    df['gvkey'] = df['gvkey'].astype('string')
    return pdm.setup_panel(df, panel_ids='gvkey', time_var='date', freq='Q',
                        panel_ids_toint=False,
                        drop_index_duplicates=True, duplicates_which_keep='last')

# %% ../nbs/hassan_2019_qje.ipynb 19
def bring_permno(df: pd.DataFrame,
                 how: str='inner'
                 ) -> pd.DataFrame:
    """Merges `permno` into `df`. Note: the default `inner` join reduced sample by about a third."""

    df = df.reset_index().merge(wrds_links.gvkey_permno_q(), how=how, on=['gvkey','Qdate'])
    return pdm.setup_panel(df, panel_ids='permno', dates_processed=True, freq='Q',
                        drop_index_duplicates=True, duplicates_which_keep='last')
